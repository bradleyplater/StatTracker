generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Games {
  id                                                String            @id
  goals                                             Goals[]
  teamCreatedBy                                     Teams             @relation(fields: [teamCreatedById], references: [id])
  teamCreatedById                                   String            
  opponentTeam                                      String
  isHome                                            Boolean
  goalsConceeded                                    Int
  goalsScored                                       Int
  players                                           Players[]
  penalties                                         Penalties[]
}

model Goals {
  id                                                 Int              @id @default(autoincrement())
  game                                               Games            @relation(fields: [gameId], references: [id])
  gameId                                             String
  scoredByPlayerId                                   String
  scoredBy                                           Players          @relation(name: "scoredBy", fields: [scoredByPlayerId], references: [id])
  assistedBy                                         Players[]        @relation(name: "assistedBy")
}

model Penalties {
  id                                                 Int              @id @default(autoincrement())
  player                                             Players          @relation(fields: [playerId], references: [id])      
  playerId                                           String
  game                                               Games            @relation(fields: [gameId], references: [id])
  gameId                                             String
  type                                               String
  duration                                           Int              @default(0)
}

model Players {
  id                                                 String            @id 
  shooting_side                                      Int?
  userid                                             String?
  firstName                                          String?
  surname                                            String?
  goals                                              Goals[]          @relation(name: "scoredBy")
  numberOfGoals                                      Int?
  assists                                            Goals[]          @relation(name: "assistedBy")
  numberOfAssists                                    Int?
  games                                              Games[]
  gamesPlayed                                        Int?
  pims                                               Int?
  totalPoints                                        Int              @default(0)
  penalties                                          Penalties[]
  totalPenaltyDuration                               Int              @default(0)
  teams                                              PlayersInTeams[]
  shooting_side_id                                   Shooting_side?   @relation(fields: [shooting_side], references: [id])
  user                                               User?            @relation(fields: [userid], references: [id])
}

model PlayersInTeams {
  player                                            Players          @relation(fields: [playerId], references: [id])
  playerId                                          String
  team                                              Teams            @relation(fields: [teamId], references: [id])
  teamId                                            String
  playerNumber                                      Int?             @unique
  numberOfGoals                                     Int              @default(0)
  numberOfAssists                                   Int              @default(0)
  gamesPlayed                                       Int              @default(0)
  totalPoints                                       Int              @default(0)
  totalPenaltyDuration                              Int              @default(0)
  
  @@id([playerId, teamId])
}

model Teams {
  id                                                String          @id
  name                                              String          @unique
  games                                             Games[]
  admins                                            User[]
  players                                           PlayersInTeams[]
} 

model Sessions {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime @db.Timestamptz(6)
  sessionToken String   @db.VarChar(255)
}

model Shooting_side {
  id                                           Int           @id
  side                                         String        @unique @db.VarChar(255)
  players                                      Players[]     
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  players       Players[]
  teamId        String?   
  adminTeams    Teams?    @relation(fields: [teamId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
